package com.mk.hms.model;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;

public class TRoomtypeInfoCriteria {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_roomtype_info
     *
     * @mbggenerated Wed Jul 29 08:11:23 CST 2015
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_roomtype_info
     *
     * @mbggenerated Wed Jul 29 08:11:23 CST 2015
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_roomtype_info
     *
     * @mbggenerated Wed Jul 29 08:11:23 CST 2015
     */
    protected List<Criteria> oredCriteria;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_roomtype_info
     *
     * @mbggenerated Wed Jul 29 08:11:23 CST 2015
     */
    protected int limitStart = -1;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_roomtype_info
     *
     * @mbggenerated Wed Jul 29 08:11:23 CST 2015
     */
    protected int limitEnd = -1;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_roomtype_info
     *
     * @mbggenerated Wed Jul 29 08:11:23 CST 2015
     */
    public TRoomtypeInfoCriteria() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_roomtype_info
     *
     * @mbggenerated Wed Jul 29 08:11:23 CST 2015
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_roomtype_info
     *
     * @mbggenerated Wed Jul 29 08:11:23 CST 2015
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_roomtype_info
     *
     * @mbggenerated Wed Jul 29 08:11:23 CST 2015
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_roomtype_info
     *
     * @mbggenerated Wed Jul 29 08:11:23 CST 2015
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_roomtype_info
     *
     * @mbggenerated Wed Jul 29 08:11:23 CST 2015
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_roomtype_info
     *
     * @mbggenerated Wed Jul 29 08:11:23 CST 2015
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_roomtype_info
     *
     * @mbggenerated Wed Jul 29 08:11:23 CST 2015
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_roomtype_info
     *
     * @mbggenerated Wed Jul 29 08:11:23 CST 2015
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_roomtype_info
     *
     * @mbggenerated Wed Jul 29 08:11:23 CST 2015
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_roomtype_info
     *
     * @mbggenerated Wed Jul 29 08:11:23 CST 2015
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_roomtype_info
     *
     * @mbggenerated Wed Jul 29 08:11:23 CST 2015
     */
    public void setLimitStart(int limitStart) {
        this.limitStart=limitStart;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_roomtype_info
     *
     * @mbggenerated Wed Jul 29 08:11:23 CST 2015
     */
    public int getLimitStart() {
        return limitStart;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_roomtype_info
     *
     * @mbggenerated Wed Jul 29 08:11:23 CST 2015
     */
    public void setLimitEnd(int limitEnd) {
        this.limitEnd=limitEnd;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_roomtype_info
     *
     * @mbggenerated Wed Jul 29 08:11:23 CST 2015
     */
    public int getLimitEnd() {
        return limitEnd;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_roomtype_info
     *
     * @mbggenerated Wed Jul 29 08:11:23 CST 2015
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Long value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Long value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Long value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Long value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Long value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Long value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Long> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Long> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Long value1, Long value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Long value1, Long value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andRoomTypeIdIsNull() {
            addCriterion("roomtypeid is null");
            return (Criteria) this;
        }

        public Criteria andRoomTypeIdIsNotNull() {
            addCriterion("roomtypeid is not null");
            return (Criteria) this;
        }

        public Criteria andRoomTypeIdEqualTo(Long value) {
            addCriterion("roomtypeid =", value, "roomTypeId");
            return (Criteria) this;
        }

        public Criteria andRoomTypeIdNotEqualTo(Long value) {
            addCriterion("roomtypeid <>", value, "roomTypeId");
            return (Criteria) this;
        }

        public Criteria andRoomTypeIdGreaterThan(Long value) {
            addCriterion("roomtypeid >", value, "roomTypeId");
            return (Criteria) this;
        }

        public Criteria andRoomTypeIdGreaterThanOrEqualTo(Long value) {
            addCriterion("roomtypeid >=", value, "roomTypeId");
            return (Criteria) this;
        }

        public Criteria andRoomTypeIdLessThan(Long value) {
            addCriterion("roomtypeid <", value, "roomTypeId");
            return (Criteria) this;
        }

        public Criteria andRoomTypeIdLessThanOrEqualTo(Long value) {
            addCriterion("roomtypeid <=", value, "roomTypeId");
            return (Criteria) this;
        }

        public Criteria andRoomTypeIdIn(List<Long> values) {
            addCriterion("roomtypeid in", values, "roomTypeId");
            return (Criteria) this;
        }

        public Criteria andRoomTypeIdNotIn(List<Long> values) {
            addCriterion("roomtypeid not in", values, "roomTypeId");
            return (Criteria) this;
        }

        public Criteria andRoomTypeIdBetween(Long value1, Long value2) {
            addCriterion("roomtypeid between", value1, value2, "roomTypeId");
            return (Criteria) this;
        }

        public Criteria andRoomTypeIdNotBetween(Long value1, Long value2) {
            addCriterion("roomtypeid not between", value1, value2, "roomTypeId");
            return (Criteria) this;
        }

        public Criteria andMinAreaIsNull() {
            addCriterion("minarea is null");
            return (Criteria) this;
        }

        public Criteria andMinAreaIsNotNull() {
            addCriterion("minarea is not null");
            return (Criteria) this;
        }

        public Criteria andMinAreaEqualTo(BigDecimal value) {
            addCriterion("minarea =", value, "minArea");
            return (Criteria) this;
        }

        public Criteria andMinAreaNotEqualTo(BigDecimal value) {
            addCriterion("minarea <>", value, "minArea");
            return (Criteria) this;
        }

        public Criteria andMinAreaGreaterThan(BigDecimal value) {
            addCriterion("minarea >", value, "minArea");
            return (Criteria) this;
        }

        public Criteria andMinAreaGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("minarea >=", value, "minArea");
            return (Criteria) this;
        }

        public Criteria andMinAreaLessThan(BigDecimal value) {
            addCriterion("minarea <", value, "minArea");
            return (Criteria) this;
        }

        public Criteria andMinAreaLessThanOrEqualTo(BigDecimal value) {
            addCriterion("minarea <=", value, "minArea");
            return (Criteria) this;
        }

        public Criteria andMinAreaIn(List<BigDecimal> values) {
            addCriterion("minarea in", values, "minArea");
            return (Criteria) this;
        }

        public Criteria andMinAreaNotIn(List<BigDecimal> values) {
            addCriterion("minarea not in", values, "minArea");
            return (Criteria) this;
        }

        public Criteria andMinAreaBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("minarea between", value1, value2, "minArea");
            return (Criteria) this;
        }

        public Criteria andMinAreaNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("minarea not between", value1, value2, "minArea");
            return (Criteria) this;
        }

        public Criteria andMaxAreaIsNull() {
            addCriterion("maxarea is null");
            return (Criteria) this;
        }

        public Criteria andMaxAreaIsNotNull() {
            addCriterion("maxarea is not null");
            return (Criteria) this;
        }

        public Criteria andMaxAreaEqualTo(BigDecimal value) {
            addCriterion("maxarea =", value, "maxArea");
            return (Criteria) this;
        }

        public Criteria andMaxAreaNotEqualTo(BigDecimal value) {
            addCriterion("maxarea <>", value, "maxArea");
            return (Criteria) this;
        }

        public Criteria andMaxAreaGreaterThan(BigDecimal value) {
            addCriterion("maxarea >", value, "maxArea");
            return (Criteria) this;
        }

        public Criteria andMaxAreaGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("maxarea >=", value, "maxArea");
            return (Criteria) this;
        }

        public Criteria andMaxAreaLessThan(BigDecimal value) {
            addCriterion("maxarea <", value, "maxArea");
            return (Criteria) this;
        }

        public Criteria andMaxAreaLessThanOrEqualTo(BigDecimal value) {
            addCriterion("maxarea <=", value, "maxArea");
            return (Criteria) this;
        }

        public Criteria andMaxAreaIn(List<BigDecimal> values) {
            addCriterion("maxarea in", values, "maxArea");
            return (Criteria) this;
        }

        public Criteria andMaxAreaNotIn(List<BigDecimal> values) {
            addCriterion("maxarea not in", values, "maxArea");
            return (Criteria) this;
        }

        public Criteria andMaxAreaBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("maxarea between", value1, value2, "maxArea");
            return (Criteria) this;
        }

        public Criteria andMaxAreaNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("maxarea not between", value1, value2, "maxArea");
            return (Criteria) this;
        }

        public Criteria andBedTypeIsNull() {
            addCriterion("bedtype is null");
            return (Criteria) this;
        }

        public Criteria andBedTypeIsNotNull() {
            addCriterion("bedtype is not null");
            return (Criteria) this;
        }

        public Criteria andBedTypeEqualTo(Long value) {
            addCriterion("bedtype =", value, "bedType");
            return (Criteria) this;
        }

        public Criteria andBedTypeNotEqualTo(Long value) {
            addCriterion("bedtype <>", value, "bedType");
            return (Criteria) this;
        }

        public Criteria andBedTypeGreaterThan(Long value) {
            addCriterion("bedtype >", value, "bedType");
            return (Criteria) this;
        }

        public Criteria andBedTypeGreaterThanOrEqualTo(Long value) {
            addCriterion("bedtype >=", value, "bedType");
            return (Criteria) this;
        }

        public Criteria andBedTypeLessThan(Long value) {
            addCriterion("bedtype <", value, "bedType");
            return (Criteria) this;
        }

        public Criteria andBedTypeLessThanOrEqualTo(Long value) {
            addCriterion("bedtype <=", value, "bedType");
            return (Criteria) this;
        }

        public Criteria andBedTypeIn(List<Long> values) {
            addCriterion("bedtype in", values, "bedType");
            return (Criteria) this;
        }

        public Criteria andBedTypeNotIn(List<Long> values) {
            addCriterion("bedtype not in", values, "bedType");
            return (Criteria) this;
        }

        public Criteria andBedTypeBetween(Long value1, Long value2) {
            addCriterion("bedtype between", value1, value2, "bedType");
            return (Criteria) this;
        }

        public Criteria andBedTypeNotBetween(Long value1, Long value2) {
            addCriterion("bedtype not between", value1, value2, "bedType");
            return (Criteria) this;
        }

        public Criteria andBedSizeIsNull() {
            addCriterion("bedsize is null");
            return (Criteria) this;
        }

        public Criteria andBedSizeIsNotNull() {
            addCriterion("bedsize is not null");
            return (Criteria) this;
        }

        public Criteria andBedSizeEqualTo(String value) {
            addCriterion("bedsize =", value, "bedSize");
            return (Criteria) this;
        }

        public Criteria andBedSizeNotEqualTo(String value) {
            addCriterion("bedsize <>", value, "bedSize");
            return (Criteria) this;
        }

        public Criteria andBedSizeGreaterThan(String value) {
            addCriterion("bedsize >", value, "bedSize");
            return (Criteria) this;
        }

        public Criteria andBedSizeGreaterThanOrEqualTo(String value) {
            addCriterion("bedsize >=", value, "bedSize");
            return (Criteria) this;
        }

        public Criteria andBedSizeLessThan(String value) {
            addCriterion("bedsize <", value, "bedSize");
            return (Criteria) this;
        }

        public Criteria andBedSizeLessThanOrEqualTo(String value) {
            addCriterion("bedsize <=", value, "bedSize");
            return (Criteria) this;
        }

        public Criteria andBedSizeLike(String value) {
            addCriterion("bedsize like", value, "bedSize");
            return (Criteria) this;
        }

        public Criteria andBedSizeNotLike(String value) {
            addCriterion("bedsize not like", value, "bedSize");
            return (Criteria) this;
        }

        public Criteria andBedSizeIn(List<String> values) {
            addCriterion("bedsize in", values, "bedSize");
            return (Criteria) this;
        }

        public Criteria andBedSizeNotIn(List<String> values) {
            addCriterion("bedsize not in", values, "bedSize");
            return (Criteria) this;
        }

        public Criteria andBedSizeBetween(String value1, String value2) {
            addCriterion("bedsize between", value1, value2, "bedSize");
            return (Criteria) this;
        }

        public Criteria andBedSizeNotBetween(String value1, String value2) {
            addCriterion("bedsize not between", value1, value2, "bedSize");
            return (Criteria) this;
        }

        public Criteria andBedSizeLikeInsensitive(String value) {
            addCriterion("upper(bedsize) like", value.toUpperCase(), "bedSize");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_roomtype_info
     *
     * @mbggenerated do_not_delete_during_merge Wed Jul 29 08:11:23 CST 2015
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_roomtype_info
     *
     * @mbggenerated Wed Jul 29 08:11:23 CST 2015
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}