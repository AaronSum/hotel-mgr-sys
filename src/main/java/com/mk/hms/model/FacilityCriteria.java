package com.mk.hms.model;

import java.util.ArrayList;
import java.util.List;

public class FacilityCriteria {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_facility
     *
     * @mbggenerated Wed Jul 29 09:06:06 CST 2015
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_facility
     *
     * @mbggenerated Wed Jul 29 09:06:06 CST 2015
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_facility
     *
     * @mbggenerated Wed Jul 29 09:06:06 CST 2015
     */
    protected List<Criteria> oredCriteria;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_facility
     *
     * @mbggenerated Wed Jul 29 09:06:06 CST 2015
     */
    protected int limitStart = -1;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_facility
     *
     * @mbggenerated Wed Jul 29 09:06:06 CST 2015
     */
    protected int limitEnd = -1;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_facility
     *
     * @mbggenerated Wed Jul 29 09:06:06 CST 2015
     */
    public FacilityCriteria() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_facility
     *
     * @mbggenerated Wed Jul 29 09:06:06 CST 2015
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_facility
     *
     * @mbggenerated Wed Jul 29 09:06:06 CST 2015
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_facility
     *
     * @mbggenerated Wed Jul 29 09:06:06 CST 2015
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_facility
     *
     * @mbggenerated Wed Jul 29 09:06:06 CST 2015
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_facility
     *
     * @mbggenerated Wed Jul 29 09:06:06 CST 2015
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_facility
     *
     * @mbggenerated Wed Jul 29 09:06:06 CST 2015
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_facility
     *
     * @mbggenerated Wed Jul 29 09:06:06 CST 2015
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_facility
     *
     * @mbggenerated Wed Jul 29 09:06:06 CST 2015
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_facility
     *
     * @mbggenerated Wed Jul 29 09:06:06 CST 2015
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_facility
     *
     * @mbggenerated Wed Jul 29 09:06:06 CST 2015
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_facility
     *
     * @mbggenerated Wed Jul 29 09:06:06 CST 2015
     */
    public void setLimitStart(int limitStart) {
        this.limitStart=limitStart;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_facility
     *
     * @mbggenerated Wed Jul 29 09:06:06 CST 2015
     */
    public int getLimitStart() {
        return limitStart;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_facility
     *
     * @mbggenerated Wed Jul 29 09:06:06 CST 2015
     */
    public void setLimitEnd(int limitEnd) {
        this.limitEnd=limitEnd;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_facility
     *
     * @mbggenerated Wed Jul 29 09:06:06 CST 2015
     */
    public int getLimitEnd() {
        return limitEnd;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_facility
     *
     * @mbggenerated Wed Jul 29 09:06:06 CST 2015
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Long value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Long value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Long value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Long value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Long value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Long value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Long> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Long> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Long value1, Long value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Long value1, Long value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andFacNameIsNull() {
            addCriterion("facName is null");
            return (Criteria) this;
        }

        public Criteria andFacNameIsNotNull() {
            addCriterion("facName is not null");
            return (Criteria) this;
        }

        public Criteria andFacNameEqualTo(String value) {
            addCriterion("facName =", value, "facName");
            return (Criteria) this;
        }

        public Criteria andFacNameNotEqualTo(String value) {
            addCriterion("facName <>", value, "facName");
            return (Criteria) this;
        }

        public Criteria andFacNameGreaterThan(String value) {
            addCriterion("facName >", value, "facName");
            return (Criteria) this;
        }

        public Criteria andFacNameGreaterThanOrEqualTo(String value) {
            addCriterion("facName >=", value, "facName");
            return (Criteria) this;
        }

        public Criteria andFacNameLessThan(String value) {
            addCriterion("facName <", value, "facName");
            return (Criteria) this;
        }

        public Criteria andFacNameLessThanOrEqualTo(String value) {
            addCriterion("facName <=", value, "facName");
            return (Criteria) this;
        }

        public Criteria andFacNameLike(String value) {
            addCriterion("facName like", value, "facName");
            return (Criteria) this;
        }

        public Criteria andFacNameNotLike(String value) {
            addCriterion("facName not like", value, "facName");
            return (Criteria) this;
        }

        public Criteria andFacNameIn(List<String> values) {
            addCriterion("facName in", values, "facName");
            return (Criteria) this;
        }

        public Criteria andFacNameNotIn(List<String> values) {
            addCriterion("facName not in", values, "facName");
            return (Criteria) this;
        }

        public Criteria andFacNameBetween(String value1, String value2) {
            addCriterion("facName between", value1, value2, "facName");
            return (Criteria) this;
        }

        public Criteria andFacNameNotBetween(String value1, String value2) {
            addCriterion("facName not between", value1, value2, "facName");
            return (Criteria) this;
        }

        public Criteria andFacTypeIsNull() {
            addCriterion("facType is null");
            return (Criteria) this;
        }

        public Criteria andFacTypeIsNotNull() {
            addCriterion("facType is not null");
            return (Criteria) this;
        }

        public Criteria andFacTypeEqualTo(Integer value) {
            addCriterion("facType =", value, "facType");
            return (Criteria) this;
        }

        public Criteria andFacTypeNotEqualTo(Integer value) {
            addCriterion("facType <>", value, "facType");
            return (Criteria) this;
        }

        public Criteria andFacTypeGreaterThan(Integer value) {
            addCriterion("facType >", value, "facType");
            return (Criteria) this;
        }

        public Criteria andFacTypeGreaterThanOrEqualTo(Integer value) {
            addCriterion("facType >=", value, "facType");
            return (Criteria) this;
        }

        public Criteria andFacTypeLessThan(Integer value) {
            addCriterion("facType <", value, "facType");
            return (Criteria) this;
        }

        public Criteria andFacTypeLessThanOrEqualTo(Integer value) {
            addCriterion("facType <=", value, "facType");
            return (Criteria) this;
        }

        public Criteria andFacTypeIn(List<Integer> values) {
            addCriterion("facType in", values, "facType");
            return (Criteria) this;
        }

        public Criteria andFacTypeNotIn(List<Integer> values) {
            addCriterion("facType not in", values, "facType");
            return (Criteria) this;
        }

        public Criteria andFacTypeBetween(Integer value1, Integer value2) {
            addCriterion("facType between", value1, value2, "facType");
            return (Criteria) this;
        }

        public Criteria andFacTypeNotBetween(Integer value1, Integer value2) {
            addCriterion("facType not between", value1, value2, "facType");
            return (Criteria) this;
        }

        public Criteria andBindingIsNull() {
            addCriterion("binding is null");
            return (Criteria) this;
        }

        public Criteria andBindingIsNotNull() {
            addCriterion("binding is not null");
            return (Criteria) this;
        }

        public Criteria andBindingEqualTo(String value) {
            addCriterion("binding =", value, "binding");
            return (Criteria) this;
        }

        public Criteria andBindingNotEqualTo(String value) {
            addCriterion("binding <>", value, "binding");
            return (Criteria) this;
        }

        public Criteria andBindingGreaterThan(String value) {
            addCriterion("binding >", value, "binding");
            return (Criteria) this;
        }

        public Criteria andBindingGreaterThanOrEqualTo(String value) {
            addCriterion("binding >=", value, "binding");
            return (Criteria) this;
        }

        public Criteria andBindingLessThan(String value) {
            addCriterion("binding <", value, "binding");
            return (Criteria) this;
        }

        public Criteria andBindingLessThanOrEqualTo(String value) {
            addCriterion("binding <=", value, "binding");
            return (Criteria) this;
        }

        public Criteria andBindingLike(String value) {
            addCriterion("binding like", value, "binding");
            return (Criteria) this;
        }

        public Criteria andBindingNotLike(String value) {
            addCriterion("binding not like", value, "binding");
            return (Criteria) this;
        }

        public Criteria andBindingIn(List<String> values) {
            addCriterion("binding in", values, "binding");
            return (Criteria) this;
        }

        public Criteria andBindingNotIn(List<String> values) {
            addCriterion("binding not in", values, "binding");
            return (Criteria) this;
        }

        public Criteria andBindingBetween(String value1, String value2) {
            addCriterion("binding between", value1, value2, "binding");
            return (Criteria) this;
        }

        public Criteria andBindingNotBetween(String value1, String value2) {
            addCriterion("binding not between", value1, value2, "binding");
            return (Criteria) this;
        }

        public Criteria andFacSortIsNull() {
            addCriterion("facSort is null");
            return (Criteria) this;
        }

        public Criteria andFacSortIsNotNull() {
            addCriterion("facSort is not null");
            return (Criteria) this;
        }

        public Criteria andFacSortEqualTo(Integer value) {
            addCriterion("facSort =", value, "facSort");
            return (Criteria) this;
        }

        public Criteria andFacSortNotEqualTo(Integer value) {
            addCriterion("facSort <>", value, "facSort");
            return (Criteria) this;
        }

        public Criteria andFacSortGreaterThan(Integer value) {
            addCriterion("facSort >", value, "facSort");
            return (Criteria) this;
        }

        public Criteria andFacSortGreaterThanOrEqualTo(Integer value) {
            addCriterion("facSort >=", value, "facSort");
            return (Criteria) this;
        }

        public Criteria andFacSortLessThan(Integer value) {
            addCriterion("facSort <", value, "facSort");
            return (Criteria) this;
        }

        public Criteria andFacSortLessThanOrEqualTo(Integer value) {
            addCriterion("facSort <=", value, "facSort");
            return (Criteria) this;
        }

        public Criteria andFacSortIn(List<Integer> values) {
            addCriterion("facSort in", values, "facSort");
            return (Criteria) this;
        }

        public Criteria andFacSortNotIn(List<Integer> values) {
            addCriterion("facSort not in", values, "facSort");
            return (Criteria) this;
        }

        public Criteria andFacSortBetween(Integer value1, Integer value2) {
            addCriterion("facSort between", value1, value2, "facSort");
            return (Criteria) this;
        }

        public Criteria andFacSortNotBetween(Integer value1, Integer value2) {
            addCriterion("facSort not between", value1, value2, "facSort");
            return (Criteria) this;
        }

        public Criteria andVisibleIsNull() {
            addCriterion("visible is null");
            return (Criteria) this;
        }

        public Criteria andVisibleIsNotNull() {
            addCriterion("visible is not null");
            return (Criteria) this;
        }

        public Criteria andVisibleEqualTo(String value) {
            addCriterion("visible =", value, "visible");
            return (Criteria) this;
        }

        public Criteria andVisibleNotEqualTo(String value) {
            addCriterion("visible <>", value, "visible");
            return (Criteria) this;
        }

        public Criteria andVisibleGreaterThan(String value) {
            addCriterion("visible >", value, "visible");
            return (Criteria) this;
        }

        public Criteria andVisibleGreaterThanOrEqualTo(String value) {
            addCriterion("visible >=", value, "visible");
            return (Criteria) this;
        }

        public Criteria andVisibleLessThan(String value) {
            addCriterion("visible <", value, "visible");
            return (Criteria) this;
        }

        public Criteria andVisibleLessThanOrEqualTo(String value) {
            addCriterion("visible <=", value, "visible");
            return (Criteria) this;
        }

        public Criteria andVisibleLike(String value) {
            addCriterion("visible like", value, "visible");
            return (Criteria) this;
        }

        public Criteria andVisibleNotLike(String value) {
            addCriterion("visible not like", value, "visible");
            return (Criteria) this;
        }

        public Criteria andVisibleIn(List<String> values) {
            addCriterion("visible in", values, "visible");
            return (Criteria) this;
        }

        public Criteria andVisibleNotIn(List<String> values) {
            addCriterion("visible not in", values, "visible");
            return (Criteria) this;
        }

        public Criteria andVisibleBetween(String value1, String value2) {
            addCriterion("visible between", value1, value2, "visible");
            return (Criteria) this;
        }

        public Criteria andVisibleNotBetween(String value1, String value2) {
            addCriterion("visible not between", value1, value2, "visible");
            return (Criteria) this;
        }

        public Criteria andFacNameLikeInsensitive(String value) {
            addCriterion("upper(facName) like", value.toUpperCase(), "facName");
            return (Criteria) this;
        }

        public Criteria andBindingLikeInsensitive(String value) {
            addCriterion("upper(binding) like", value.toUpperCase(), "binding");
            return (Criteria) this;
        }

        public Criteria andVisibleLikeInsensitive(String value) {
            addCriterion("upper(visible) like", value.toUpperCase(), "visible");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_facility
     *
     * @mbggenerated do_not_delete_during_merge Wed Jul 29 09:06:06 CST 2015
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_facility
     *
     * @mbggenerated Wed Jul 29 09:06:06 CST 2015
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}